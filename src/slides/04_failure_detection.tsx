import { type ReactElement } from 'react'

import { IntroSlide, RevealSlides, type RevealSlidesProps } from '../components/reveal'

export function FailureDetectionSlides ({ embedded }: RevealSlidesProps): ReactElement {
    return <RevealSlides embedded={embedded}>
        <IntroSlide title='Детектирование сбоев'/>
        <section>
            <section>
                <h1>Прямые и косвенные методы детектирования сбоев</h1>
            </section>
            <section>
                <b>«Прямой метод»</b> — когда тестируем наш функционал
            </section>
            <section>
                <b>«Косвенный метод»</b> — когда видим аномальные значения в показателях, которые сами по себе не говорят о сбое
            </section>
        </section>
        <section>
            <section><h1>Прямые методы</h1></section>
            <section>
                <h1>Ручное тестирование</h1>
                <p>В настоящее время — в основном для подтверждения подозрения на сбой</p>
            </section>
            <section>
                <h1>Автотесты</h1>
                <ul>
                    <li>Автотесты можно делать на продакшен</li>
                    <li>Наиболее быстрый и точный способ детектировать сбои</li>
                    <li>Редко дают ложно-положительный результат</li>
                    <li>Относительно «дороги» в разработке</li>
                    <li>Полезность часто недооценивается</li>
                </ul>
            </section>
            <section>
                <h1>Автотесты в Sage</h1>
                <ul>
                    <li>Для мониторинга системы процессинга логов пишем специальные логи «heartbeats»</li>
                    <li>Эти логи проходят точно такой же путь обработки и индексирования</li>
                    <li>Позволяют отличить ситуации, когда пользователи перестали писать логи, от ситуаций, когда сломалась обработка логов</li>
                    <li>Можно увидеть потери части логов</li>
                    <li>Доверяем метке времени и можно замерять время обработки (от записи до появления в поиске)</li>
                </ul>
            </section>
            <section>
                <h1>Автотесты в Google Search</h1>
                <ul>
                    <li>Тестирование популярных запросов, с известным стабильным результатом, например {'"'}wikipedia{'"'}</li>
                    <li>Запросы на новостные, популярные, непопулярные и очень редкие сайты, чтобы проверить все категории</li>
                    <li>Позволяют проверить не только поиск, но и ранжирование</li>
                </ul>
            </section>
            <section>
                <h1>Автотесты Jira</h1>
                <ul>
                    <li>Полный цикл:</li>
                    <ul>
                        <li>Создание проекта</li>
                        <li>Заведение задач</li>
                        <li>Поиск</li>
                        <li>Удаление</li>
                        <li>и т.п.</li>
                    </ul>
                </ul>
            </section>
            <section>
                <h1>Инструменты тестирования</h1>
                <ul>
                    <li>Prometheus Blackbox Exporter</li>
                    <li>Selenium</li>
                    <li>Любые библиотеки тестирования на любом языке программирования</li>
                    <li>Ваш любимый язык программирования</li>
                </ul>
            </section>
            <section>
                <h1>Самодиагностика</h1>
            </section>
            <section>
                <h1>Сообщения об ошибках</h1>
                <ul>
                    <li>
                            Часто в ошибки записывают, то, что ошибкой не является<br/>
                        <span className='text-stone-500'>«Недостаточно средств» — не ошибка, а обычная ситуация</span>
                    </li>
                    <li>Путают некорректные запросы и ошибки в приложении</li>
                    <li>Непроработанные ошибки приложения приводят к ложным результатам детектирования сбоев</li>
                </ul>
            </section>
            <section>
                <h1>Сообщения об ошибках</h1>
                <ul>
                    <li>Классификация HTTP кодов возврата — хорошая точка для старта</li>
                    <ul>
                        <li><code>1XX</code>, <code>2XX</code>, <code>3XX</code> — успешно отработавшие запросы</li>
                        <li><code>4XX</code> — запросы, которые в принципе не корректны (баг в клиенте или ошибка пользователя)</li>
                        <li><code>5XX</code> — в процессе обработки потенциально корректного запроса произошла ошибка</li>
                    </ul>
                    <li>
                            С точки зрения мониторинга клиента полезно четко отделить внутренние ошибки от ошибок пришедших от зависимостей
                    </li>
                </ul>
            </section>
            <section>
                <h1>Общая самодиагностика приложения</h1>
                <ul>
                    <li>Liveness-endpoint</li>
                    <li>Полноценные системы самодиагностики</li>
                    <ul>
                        <li>Похожи на автотесты, но тестируют скрытые особенности систем, например целостность шардов, корректность настроек, отрабатывание скрытых процессов обслуживания</li>
                    </ul>
                </ul>
            </section>
            <section>
                <h1>Общая самодиагностика приложения</h1>
                <h2>Полноценные системы самодиагностики</h2>
                <ul>
                    <li>Похожи на автотесты, но тестируют скрытые особенности систем, например целостность шардов, корректность настроек, отрабатывание скрытых процессов обслуживания</li>
                    <li>Google тестирует наличие нужных индексов интернет</li>
                    <li>Kibana показывает состояние шардов и реплик</li>
                    <li>SQL сервера имеют развитые инструменты самодиагностики</li>
                    <li>JRE имеет много средств для самодиагностики</li>
                </ul>
            </section>
        </section>
        <section>
            <section>
                <h1>Косвенные (статистические) методы</h1>
            </section>
            <section>
                <h1>Жалобы пользователей</h1>
                <ul>
                    <li>Через каналы поддержки</li>
                    <li>Специальные сервисы (downdetector и похожие)</li>
                    <li>Социальные платформы (соц. сети и более узкоспециальные площадки)</li>
                </ul>
            </section>
            <section>
                <h1>Отклонения от сезонности в телеметрии</h1>
                <ul>
                    <li>Настроенные вручную пороги на значения или их производные</li>
                    <li>Машинное обучение</li>
                </ul>
            </section>
            <section>
                <h1>Достоинства</h1>
                <ul>
                    <li>Покрывает сразу очень широкий срез функционала</li>
                </ul>
            </section>
            <section>
                <h1>Недостатки</h1>
                <ul>
                    <li>Работает только при достаточном количестве статистики</li>
                    <ul>
                        <li>Проблема в ночных работах обнаружится только утром</li>
                        <li>Есть важный редко используемый функционал (например, только в период сдачи налоговой отчетности)</li>
                    </ul>
                </ul>
            </section>
            <section>
                <h1>Недостатки</h1>
                <ul>
                    <li>Один «странный» пользователь портит всю статистику</li>
                    <li>В целом большая шумность метода</li>
                </ul>
            </section>
            <section>
                <h1>Недостатки</h1>
                <ul>
                    <li>Отклонение в статистике не означает сбоя — всегда нужна дополнительная диагностика</li>
                    <li>Даже, если срабатывание верное, то не понятно, в чем дело</li>
                </ul>
            </section>
        </section>
        <section>
            <h1>Выводы</h1>
            <ul>
                <li>Нужен комплексный подход</li>
                <li>Диагностику сбоев надо специально проектировать</li>
                <li>В любом случае иногда будете пропускать сбой (утешительный вывод)</li>
            </ul>
        </section>
        <section>
            <section>
                <h1>Алертирование</h1>
            </section>
            <section>
                <p>Инженерам не надо смотреть в мониторы непрерывно</p>
            </section>
            <section>
                <b>Алертирование</b> — механизм привлечения внимания инженеров
            </section>
            <section>
                <ul>
                    <li>Алертируем о сбоях</li>
                    <li>Алертируем о возникновении ситуации требующей немедленного внимания</li>
                </ul>
            </section>
            <section>
                <h1>Триггер и пейдж</h1>
            </section>
            <section>
                <h1>Типичные ошибки</h1>
                <h2>Нарушение обратной связи</h2>
                <ul>
                    <li>Алертирование настраивают не те, кто реагирует на алерты</li>
                    <li>Алерты доставляются не инженерам, которые устраняют сбои</li>
                </ul>
            </section>
            <section>
                <h1>Типичные ошибки</h1>
                <h2>Замусоривание алертов</h2>
                <ul>
                    <li>Посылаем информационные сообщения вместо алертов</li>
                    <li>Во время сбоя приходит сотни и тысячи сообщений</li>
                </ul>
                <p className='info'>При правильной организации алертирования ответственные реагируют на каждый пейдж</p>
            </section>
            <section>
                <h1>Типичные ошибки</h1>
                <h2>Доставка алерта большому кругу лиц</h2>
                <ul>
                    <li>Может породить коллективную безотвественность</li>
                    <li>Постоянно реагирую одни и те же лица</li>
                </ul>
            </section>
            <section>
                <h1>Типичные ошибки</h1>
                <h2>Доставка алерта узкому кругу наиболее опытных лиц</h2>
                <ul>
                    <li>Остальная команда не развивается</li>
                    <li>Опытные выгорают</li>
                    <li>Bus-factor</li>
                </ul>
            </section>
            <section>
                <h1>Типичные ошибки</h1>
                <h2>Недостаточно настойчивая доставка алертов</h2>
                <ul>
                    <li>Телефон должен звонить</li>
                    <li>Получение и работу над алертом надо подтверждать</li>
                    <li>При неподтверждении должен быть установлен процесс эскалации</li>
                </ul>
            </section>
        </section>
        <section>
            <h1>Спасибо!</h1>
            <h2>Вопросы?</h2>
        </section>
    </RevealSlides>
}
